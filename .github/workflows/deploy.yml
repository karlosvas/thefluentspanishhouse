name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./client
      - name: Build frontend
        run: npm run build
        working-directory: ./client
      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./client/dist
      
  build-backend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install backend dependencies
        run: npm install
        working-directory: ./server
      - name: Build backend
        run: npm run build
        working-directory: ./server
      - name: Upload backend build
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./server/public

  test-backend:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install Playwright Browsers
        run: npx playwright install
        working-directory: ./server
      - name: Install backend dependencies
        run: npm install
        working-directory: ./server
      - name: Run Playwright tests
        run: npm run test
        working-directory: ./server
        env:
          MONGO_DB_FLUENT: ${{ secrets.MONGO_DB_FLUENT }}
          PORT: ${{ secrets.PORT }}
          MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
          MAILCHIMP_SERVER_PREFIX: ${{ secrets.MAILCHIMP_SERVER_PREFIX }}
          MAILCHIMP_LIST_ID: ${{ secrets.MAILCHIMP_LIST_ID }}
          MAILCHIMP_GROUP_ID: ${{ secrets.MAILCHIMP_GROUP_ID }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          ADMIN_GMAIL: ${{ secrets.ADMIN_GMAIL }}
          DEFAULT_TOKEN: ${{ secrets.DEFAULT_TOKEN }}
          FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
          FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
          FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
          FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
          FIREBASE_DB: ${{ secrets.FIREBASE_DB }}

  deploy-both:
    needs: [test-backend]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./client/dist
      # Frontend deployment
      - name: Deploy frontend
        run: |
          vercel link --yes --project ${{ secrets.FRONTEND_PROJECT_ID }} --scope ${{ secrets.VERCEL_TEAM }} --token=${{ secrets.VERCEL_TOKEN }}
          ls -la
          vercel --token ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./client

      - name: Download backend build
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./server/public
      # Backend deployment
      - name: Deploy backend
        run: |
          vercel link --yes --project ${{ secrets.BACKEND_PROJECT_ID }} --scope ${{ secrets.VERCEL_TEAM }} --token=${{ secrets.VERCEL_TOKEN }}
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel --token ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./server